import { useState } from "react";
import { useKeyboard } from "@opentui/react";
import Input from "./input";
import { useCommand } from "../command-provider";
import { runAgent } from "../../core/agent";

export default function PentestAgentDisplay() {
  const [focusedIndex, setFocusedIndex] = useState(0);
  const [target, setTarget] = useState("");
  const [objective, setObjective] = useState("");
  const { closePentest } = useCommand();

  const inputs = ["target", "objective"]; // List of input fields

  useKeyboard((key) => {
    // Escape - Close pentest display
    if (key.name === "escape") {
      closePentest();
      return;
    }

    // Tab - Next field
    if (key.name === "tab" && !key.shift) {
      setFocusedIndex((prev) => (prev + 1) % inputs.length);
      return;
    }

    // Shift+Tab - Previous field
    if (key.name === "tab" && key.shift) {
      setFocusedIndex((prev) => (prev - 1 + inputs.length) % inputs.length);
      return;
    }

    // Enter - Begin execution (when all fields filled)
    if (key.name === "return") {
      if (target && objective) {
        console.log("Begin execution:", { target, objective });
        // Add your execution logic here
      }
    }
  });

  async function beginExecution() {
    if (target && objective) {
      console.log("Begin execution:", { target, objective });
      const stream = runAgent({
        target,
        objective,
        model: "claude-3-5-sonnet-20241022",
      });
    }
  }

  return (
    <box
      alignItems="center"
      justifyContent="center"
      flexDirection="column"
      width={60}
      flexGrow={1}
      gap={1}
    >
      <Input
        label="Target"
        placeholder="Enter a target"
        value={target}
        onInput={setTarget}
        focused={focusedIndex === 0}
      />
      <Input
        label="Objective"
        placeholder="Enter an objective"
        value={objective}
        onInput={setObjective}
        focused={focusedIndex === 1}
      />
      <box flexDirection="row" width="100%" justifyContent="flex-end" gap={1}>
        <text fg="gray">
          <span fg="green">[TAB]</span> Next · <span fg="green">[ESC]</span>{" "}
          Close ·
        </text>
        <text fg="green">[ENTER]</text>
        <text fg="gray">Begin</text>
      </box>
    </box>
  );
}
