name: Release and Publish

on:
  push:
    branches:
      - main
    paths:
      - "package.json"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Check if tag exists
        id: check-tag
        run: |
          if git rev-parse "v${{ steps.package-version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build project
        if: steps.check-tag.outputs.exists == 'false'
        run: bun run build

      - name: Create tarball
        if: steps.check-tag.outputs.exists == 'false'
        run: npm pack

      - name: Create Release
        if: steps.check-tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          generate_release_notes: true
          body: |
            ## Release v${{ steps.package-version.outputs.version }}

            ### Installation
            ```bash
            npm install -g @pensar/apex
            # or
            bun install -g @pensar/apex
            ```

            ### Usage
            ```bash
            pensar
            ```

            See [README.md](https://github.com/${{ github.repository }}/blob/main/README.md) for full documentation.
          files: |
            pensar-apex-*.tgz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js for npm publish
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm
        if: steps.check-tag.outputs.exists == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
